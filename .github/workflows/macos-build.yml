name: macOS build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache
        id: cache-libraries
        uses: actions/cache@v2
        with:
          path: |
            libraries/depot_tools
            libraries/gn
            libraries/glad
            libraries/glfw
            libraries/skia
            libraries/v8
            libraries/libuv
          # The key should invalidate if these files change:
          # .gclient, setup_build_env.sh, sync.sh, build_skia.sh, build_v8.sh, skia-build-args.gn, v8-build-args.gn
          key: ${{ runner.os }}-build-cache-todo-put-a-tag-here-v2

      - name: Sync
        if: steps.cache-libraries.outputs.cache-hit != 'true'
        run: |
          source libraries/setup_build_env.sh
          libraries/sync.sh

      - name: Build Skia
        if: steps.cache-libraries.outputs.cache-hit != 'true'
        run: |
          source libraries/setup_build_env.sh
          libraries/build_skia.sh

      - name: Build v8
        if: steps.cache-libraries.outputs.cache-hit != 'true'
        run: |
          source libraries/setup_build_env.sh
          libraries/build_v8.sh

      - name: Build
        run: |
          source libraries/setup_build_env.sh
          cmake -S. -B out -DCMAKE_BUILD_TYPE=Release -G Ninja
          cmake --build out
